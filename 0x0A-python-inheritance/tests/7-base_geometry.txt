``The base_geometry text``
========================
``using base_geometry``
------------------------------
first import base_geometry module

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("holberton", 0)
    Traceback (most recent call last):
    ...
    ValueError: holberton must be greater than 0

    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    	      ...
    Exception: area() is not implemented

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

   >>> bg.integer_validator("distance", -4)
   Traceback (most recent call last):
   ...
   ValueError: distance must be greater than 0

   >>> bg.integer_validator("age", {7, 1})
   Traceback (most recent call last):
   ...
   TypeError: age must be an integer

   >>> bg.integer_validator("year", None)
   Traceback (most recent call last):
   ...
   TypeError: year must be an integer

   >>> bg.integer_validator("holberton", [90])
   Traceback (most recent call last):
   ...
   TypeError: holberton must be an integer

   >>> bg.integer_validator()
   Traceback (most recent call last):
   ...
   TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

   >>> bg.integer_validator("age")
   Traceback (most recent call last):
   ...
   TypeError: integer_validator() missing 1 required positional argument: 'value'

   >>> bg.integer_validator("age", 1)

   >>> bg.integer_validator("NaN", float('nan'))
   Traceback (most recent call last):
   ...
   TypeError: NaN must be an integer

   >>> bg.integer_validator("age", (4,))
   Traceback (most recent call last):
   ...
   TypeError: age must be an integer

   >>> bg.integer_validator("age", True)
   Traceback (most recent call last):
   TypeError: age must be an intege

